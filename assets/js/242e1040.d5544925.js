"use strict";(self.webpackChunkqb_docs=self.webpackChunkqb_docs||[]).push([[105],{6517:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return d},default:function(){return m}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],s={sidebar_position:1},i="Events",c={unversionedId:"tutorial-extras/events",id:"tutorial-extras/events",isDocsHomePage:!1,title:"Events",description:"QBCoreTriggerCallback",source:"@site/docs/tutorial-extras/events.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/events",permalink:"/qb-docs/docs/tutorial-extras/events",editUrl:"https://github.com/qbcore-framework/qb-docs/edit/main/docs/docs/tutorial-extras/events.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/qb-docs/docs/tutorial-basics/functions"},next:{title:"Functions",permalink:"/qb-docs/docs/tutorial-extras/functions"}},d=[{value:"QBCore:Server:TriggerCallback",id:"qbcoreservertriggercallback",children:[]},{value:"QBCore:UpdatePlayer",id:"qbcoreupdateplayer",children:[]},{value:"QBCore:Server:SetMetaData",id:"qbcoreserversetmetadata",children:[]},{value:"QBCore:ToggleDuty",id:"qbcoretoggleduty",children:[]},{value:"QBCore:Server:UseItem",id:"qbcoreserveruseitem",children:[]},{value:"QBCore:Server:RemoveItem",id:"qbcoreserverremoveitem",children:[]},{value:"QBCore:Server:AddItem",id:"qbcoreserveradditem",children:[]},{value:"QBCore:CallCommand",id:"qbcorecallcommand",children:[]}],u={toc:d};function m(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"events"},"Events"),(0,o.kt)("h3",{id:"qbcoreservertriggercallback"},"QBCore:Server:TriggerCallback"),(0,o.kt)("p",null,"Event for triggering a callback"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterNetEvent('QBCore:Server:TriggerCallback', function(name, ...)\n    local src = source\n    QBCore.Functions.TriggerCallback(name, src, function(...)\n        TriggerClientEvent('QBCore:Client:TriggerCallback', src, name, ...)\n    end, ...)\nend)\n")),(0,o.kt)("h3",{id:"qbcoreupdateplayer"},"QBCore:UpdatePlayer"),(0,o.kt)("p",null,"Event for updating and saving player data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterNetEvent('QBCore:UpdatePlayer', function()\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player then\n        local newHunger = Player.PlayerData.metadata['hunger'] - QBCore.Config.Player.HungerRate\n        local newThirst = Player.PlayerData.metadata['thirst'] - QBCore.Config.Player.ThirstRate\n        if newHunger <= 0 then newHunger = 0 end\n        if newThirst <= 0 then newThirst = 0 end\n        Player.Functions.SetMetaData('thirst', newThirst)\n        Player.Functions.SetMetaData('hunger', newHunger)\n        TriggerClientEvent('hud:client:UpdateNeeds', src, newHunger, newThirst)\n        Player.Functions.Save()\n    end\nend)\n")),(0,o.kt)("h3",{id:"qbcoreserversetmetadata"},"QBCore:Server:SetMetaData"),(0,o.kt)("p",null,"Event to set a players metadata"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterNetEvent('QBCore:Server:SetMetaData', function(meta, data)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if meta == 'hunger' or meta == 'thirst' then\n        if data > 100 then\n            data = 100\n        end\n    end\n    if Player then\n        Player.Functions.SetMetaData(meta, data)\n    end\n    TriggerClientEvent('hud:client:UpdateNeeds', src, Player.PlayerData.metadata['hunger'], Player.PlayerData.metadata['thirst'])\nend)\n")),(0,o.kt)("h3",{id:"qbcoretoggleduty"},"QBCore:ToggleDuty"),(0,o.kt)("p",null,"Event to toggle a players duty status"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterNetEvent('QBCore:ToggleDuty', function()\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    if Player.PlayerData.job.onduty then\n        Player.Functions.SetJobDuty(false)\n        TriggerClientEvent('QBCore:Notify', src, 'You are now off duty!')\n    else\n        Player.Functions.SetJobDuty(true)\n        TriggerClientEvent('QBCore:Notify', src, 'You are now on duty!')\n    end\n    TriggerClientEvent('QBCore:Client:SetDuty', src, Player.PlayerData.job.onduty)\nend)\n")),(0,o.kt)("h3",{id:"qbcoreserveruseitem"},"QBCore:Server:UseItem"),(0,o.kt)("p",null,"Event to call for item use (not recommended)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterNetEvent('QBCore:Server:UseItem', function(item)\n    local src = source\n    if item and item.amount > 0 then\n        if QBCore.Functions.CanUseItem(item.name) then\n            QBCore.Functions.UseItem(src, item)\n        end\n    end\nend)\n")),(0,o.kt)("h3",{id:"qbcoreserverremoveitem"},"QBCore:Server:RemoveItem"),(0,o.kt)("p",null,"Event to call removing an item from a player (not recommended)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterNetEvent('QBCore:Server:RemoveItem', function(itemName, amount, slot)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    Player.Functions.RemoveItem(itemName, amount, slot)\nend)\n")),(0,o.kt)("h3",{id:"qbcoreserveradditem"},"QBCore:Server:AddItem"),(0,o.kt)("p",null,"Event to call for giving a player an item (not recommended)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterNetEvent('QBCore:Server:AddItem', function(itemName, amount, slot, info)\n    local src = source\n    local Player = QBCore.Functions.GetPlayer(src)\n    Player.Functions.AddItem(itemName, amount, slot, info)\nend)\n")),(0,o.kt)("h3",{id:"qbcorecallcommand"},"QBCore:CallCommand"),(0,o.kt)("p",null,"Event to trigger a command outside the chat (ex: qb-adminmenu)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"RegisterNetEvent('QBCore:CallCommand', function(command, args)\n    local src = source\n    if QBCore.Commands.List[command] then\n        local Player = QBCore.Functions.GetPlayer(src)\n        if Player then\n            local isGod = QBCore.Functions.HasPermission(src, 'god')\n            local hasPerm = QBCore.Functions.HasPermission(src, QBCore.Commands.List[command].permission)\n            local isPrincipal = IsPlayerAceAllowed(src, 'command')\n            if (QBCore.Commands.List[command].permission == Player.PlayerData.job.name) or isGod or hasPerm or isPrincipal then\n                if (QBCore.Commands.List[command].argsrequired and #QBCore.Commands.List[command].arguments ~= 0 and args[#QBCore.Commands.List[command].arguments] == nil) then\n                    TriggerClientEvent('QBCore:Notify', src, 'All arguments must be filled out!', 'error')\n                else\n                    QBCore.Commands.List[command].callback(src, args)\n                end\n            else\n                TriggerClientEvent('QBCore:Notify', src, 'No Access To This Command', 'error')\n            end\n        end\n    end\nend)\n")))}m.isMDXComponent=!0}}]);